// create a server - > listen - > then able to accept incoming requets
// Express js - > Node js framework

// express = "4.19.2"
//         4 - > major
//         19 - > minor (some feature,backword compatible)
//         2 - > patch (small change,bug fix and push)

// ^ it will automatcially upgrate to 4.x.x
// ~ it will  - do homework




const { adminAuth, userAuth } = require("./middlewares/auth")

//request handler

// Handle Auth middleware for only GET requests GET , POST
app.use('/admin', adminAuth)


// handling authorization with middleware  . Here for /admin/getAllData we do not need to use auth code as it checked above 

app.get('/admin/getAllData', (req, res) => {
    res.send("All data")
})

// this will only handle GET call to /user
app.get("/user", userAuth, (req, res, next) => {
    res.send({ firstName: 'Manish', lastName: 'Nibandhe' })
}, (req, res) => {
    console.log("Handling the route user 2!!")   //middleware
    res.send("2nd Response")
})

// use of middleware


// query params   /user?userId=101
app.get('/user', (req, res) => {     // check the sequencing 
    console.log(req.query)
    res.send({ firstName: 'Manish', lastName: 'Nibandhe' })
})

// dynamic routes  : /user/101/username
app.get('/user/:userId/:username', (req, res) => {
    console.log(req.params)
    res.send({ firstName: 'Manish', lastName: 'Nibandhe' })
})


app.get('/getUserdata', (req, res) => {
    try {
        throw new Error("asf")
        res.send("User Data Sent")
    } catch (err) {
        res.status(500).send("Something  went wrong contact support team")
    }


})

//Keep this code always at the end throw this error
app.use("/", (err, req, res, next) => {
    if (err) {
        //Log your errors
        res.status(500).send("something went wrong")
    }
})


